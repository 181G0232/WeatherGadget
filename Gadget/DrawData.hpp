#ifndef GADGET_DRAWDATA
#define GADGET_DRAWDATA

#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "LayoutJson.hpp"

// Definir constantes
#define ANCHO_PANTALLA 128 // ancho pantalla OLED
#define ALTO_PANTALLA 64 // alto pantalla OLED

#define OLED_RESET -1

const uint8_t bloken_clouds_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x3e, 0x00, 
    0x03, 0xc0, 0x0e, 0x00, 0x07, 0x80, 0x07, 0x00, 0x07, 0x00, 0x07, 0x80, 0x0e, 0x00, 0x03, 0xf0, 
    0x1e, 0x00, 0x03, 0xf8, 0x3c, 0x00, 0x00, 0x7c, 0x78, 0x00, 0x00, 0x1e, 0x70, 0x00, 0x00, 0x0e, 
    0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 
    0xe0, 0x00, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00, 0x0e, 0x3c, 0x00, 0x00, 0x3c, 
    0x1f, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t clear_sky_day_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 
    0x00, 0x03, 0xc0, 0x00, 0x04, 0x07, 0xe0, 0x20, 0x03, 0xbf, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xc0, 
    0x03, 0xf8, 0x1f, 0xc0, 0x03, 0xe0, 0x07, 0x80, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x80, 0x01, 0xc0, 
    0x03, 0x80, 0x01, 0xc0, 0x07, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00, 0xfe, 
    0x7f, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0xe0, 0x03, 0x80, 0x01, 0xc0, 
    0x03, 0x80, 0x01, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x01, 0xe0, 0x07, 0xc0, 0x03, 0xf8, 0x1f, 0xc0, 
    0x03, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xe0, 0x04, 0x07, 0xe0, 0x20, 0x00, 0x03, 0xc0, 0x00, 
    0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t clear_sky_nigth_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 
    0x00, 0xf8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x7e, 0x00, 0x18, 0x03, 0xfe, 0x00, 0x18, 0x07, 0xfc, 0x00, 0x7e, 0x0f, 0x1c, 0x00, 
    0x7e, 0x1c, 0x18, 0x00, 0x18, 0x38, 0x18, 0x00, 0x18, 0x70, 0x18, 0x00, 0x00, 0x70, 0x1c, 0x00, 
    0x00, 0x60, 0x1c, 0x00, 0x00, 0xe0, 0x0e, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0xe0, 0x07, 0x81, 
    0x00, 0xe0, 0x03, 0xff, 0x00, 0xe0, 0x00, 0xff, 0x00, 0xe0, 0x00, 0x3f, 0x00, 0x60, 0x00, 0x06, 
    0x00, 0x70, 0x00, 0x0e, 0x00, 0x70, 0x00, 0x0e, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38, 
    0x00, 0x0f, 0x00, 0xf0, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x7e, 0x00
};

const uint8_t few_clouds_day_raw[(32 * 32)] = {
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x30, 0x00, 
    0x00, 0x70, 0x00, 0x30, 0x00, 0x70, 0x70, 0x70, 0x00, 0x33, 0xfe, 0x60, 0x00, 0x07, 0xff, 0x00, 
    0x00, 0x0f, 0x07, 0x80, 0x00, 0x1e, 0x03, 0xc0, 0x00, 0xff, 0x81, 0xc0, 0x03, 0xff, 0xe0, 0xc0, 
    0x07, 0xc1, 0xf0, 0xef, 0x07, 0x00, 0x78, 0xef, 0x0e, 0x00, 0x38, 0xe6, 0x1c, 0x00, 0x1c, 0xc0, 
    0x1c, 0x00, 0x1f, 0xc0, 0x1c, 0x00, 0x0f, 0xf0, 0x38, 0x00, 0x0f, 0xf8, 0x78, 0x00, 0x00, 0x3c, 
    0x70, 0x00, 0x00, 0x1c, 0xe0, 0x00, 0x00, 0x0c, 0xe0, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x0e, 
    0xe0, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x1c, 0x78, 0x00, 0x00, 0x78, 
    0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
};

const uint8_t few_clouds_night_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x7f, 0x80, 
    0x00, 0x00, 0xf7, 0x00, 0x00, 0x01, 0xe7, 0x00, 0x00, 0x03, 0xc7, 0x00, 0x00, 0x03, 0x83, 0x00, 
    0x00, 0x03, 0x03, 0x80, 0x00, 0x1f, 0x03, 0xc0, 0x00, 0xff, 0x81, 0xff, 0x03, 0xff, 0xe0, 0xff, 
    0x07, 0xc1, 0xf0, 0x3f, 0x07, 0x00, 0x78, 0x07, 0x0e, 0x00, 0x38, 0x0e, 0x1c, 0x00, 0x1c, 0x1e, 
    0x1c, 0x00, 0x1f, 0xfc, 0x1c, 0x00, 0x0f, 0xf8, 0x38, 0x00, 0x0f, 0xf8, 0x78, 0x00, 0x00, 0x3c, 
    0x70, 0x00, 0x00, 0x1c, 0xe0, 0x00, 0x00, 0x0c, 0xe0, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x0e, 
    0xe0, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x1c, 0x78, 0x00, 0x00, 0x78, 
    0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00
};

const uint8_t mist_night_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x7e, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x0f, 0x1c, 0x00, 
    0x00, 0x1c, 0x18, 0x00, 0x00, 0x38, 0x18, 0x00, 0x00, 0x70, 0x18, 0x00, 0x00, 0x70, 0x1c, 0x00, 
    0x00, 0x60, 0x1c, 0x00, 0x00, 0xe0, 0x0e, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x1f, 0xff, 0x07, 0x81, 
    0x1f, 0xff, 0x03, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x06, 
    0xff, 0xff, 0xe0, 0x0e, 0xff, 0xff, 0xe0, 0x0e, 0xff, 0xff, 0xc0, 0x1c, 0x00, 0x00, 0x00, 0x38, 
    0x00, 0x00, 0x00, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xfe, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t mist_day_raw[(32 * 32)] = {
    0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 
    0x04, 0x01, 0x80, 0x20, 0x0e, 0x00, 0x00, 0x70, 0x07, 0x00, 0x00, 0xe0, 0x03, 0x8f, 0xf1, 0xc0, 
    0x01, 0x1f, 0xf8, 0x80, 0x00, 0x7e, 0x7e, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0xe0, 0x07, 0x00, 
    0x1f, 0xff, 0x03, 0x80, 0x1f, 0xff, 0x03, 0x80, 0x1f, 0xff, 0x03, 0x80, 0x00, 0x00, 0x01, 0x9f, 
    0x00, 0x00, 0x01, 0x9f, 0xff, 0xff, 0xc3, 0x80, 0xff, 0xff, 0xe3, 0x80, 0xff, 0xff, 0xe3, 0x80, 
    0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x1f, 0xff, 0xf8, 0x80, 
    0x1f, 0xff, 0xf1, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x70, 0x00, 0x01, 0x80, 0x20, 
    0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00
};

const uint8_t rain_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
    0x00, 0x7f, 0xf8, 0x00, 0x01, 0xf8, 0xfc, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x03, 0x80, 0x0f, 0x00, 
    0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x03, 0xf0, 0x1e, 0x00, 0x03, 0xf8, 
    0x3c, 0x00, 0x00, 0x3c, 0x70, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x06, 0xe0, 0x01, 0x80, 0x07, 
    0xe0, 0x01, 0x80, 0x07, 0xe0, 0x31, 0x8c, 0x07, 0xe0, 0x71, 0x8e, 0x07, 0xe0, 0x71, 0x8e, 0x07, 
    0x70, 0x71, 0x8e, 0x0e, 0x78, 0x71, 0x8e, 0x1e, 0x3e, 0x71, 0x8e, 0x7c, 0x1f, 0x71, 0x8e, 0xf8, 
    0x07, 0x71, 0x8e, 0xe0, 0x00, 0x71, 0x8e, 0x00, 0x00, 0x71, 0x8e, 0x00, 0x00, 0x71, 0x8e, 0x00, 
    0x00, 0x70, 0x0e, 0x00, 0x00, 0x70, 0x0e, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t scattered_clouds_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x01, 0xe0, 0x3e, 0x00, 
    0x03, 0xc0, 0x0e, 0x00, 0x07, 0x80, 0x07, 0x00, 0x07, 0x00, 0x07, 0x80, 0x0e, 0x00, 0x03, 0xf0, 
    0x1e, 0x00, 0x03, 0xf8, 0x3c, 0x00, 0x00, 0x7c, 0x78, 0x00, 0x00, 0x1e, 0x70, 0x00, 0x00, 0x0e, 
    0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 
    0xe0, 0x00, 0x00, 0x07, 0x60, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00, 0x0e, 0x3c, 0x00, 0x00, 0x3c, 
    0x1f, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t shower_rain_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
    0x00, 0x7f, 0xf8, 0x00, 0x01, 0xf8, 0xfc, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x03, 0x80, 0x0f, 0x00, 
    0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x03, 0xf0, 0x1e, 0x00, 0x03, 0xf8, 
    0x3c, 0x00, 0x00, 0x3c, 0x70, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x06, 0xe0, 0x00, 0x00, 0x07, 
    0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 
    0x70, 0x00, 0x70, 0x0e, 0x78, 0x00, 0x70, 0x1e, 0x3e, 0x00, 0x70, 0x7c, 0x1f, 0x8e, 0x71, 0xf8, 
    0x0f, 0x8e, 0x71, 0xf0, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x0e, 0x70, 0x00, 
    0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t snow_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
    0x00, 0x7f, 0xf8, 0x00, 0x01, 0xf8, 0xfc, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x03, 0x80, 0x0f, 0x00, 
    0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x03, 0xf0, 0x1e, 0x00, 0x03, 0xf8, 
    0x3c, 0x00, 0x00, 0x3c, 0x70, 0x10, 0x00, 0x0e, 0x70, 0x10, 0x00, 0x06, 0xe1, 0xf7, 0x00, 0x07, 
    0xe0, 0xfc, 0x00, 0x07, 0xe0, 0x68, 0x00, 0x07, 0xe0, 0xfe, 0x00, 0x07, 0xe1, 0x92, 0x00, 0x07, 
    0x70, 0x10, 0x00, 0x0e, 0x78, 0x10, 0x00, 0x1e, 0x3e, 0x00, 0x60, 0x7c, 0x1f, 0x00, 0x60, 0xf8, 
    0x0f, 0x03, 0x6c, 0xe0, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0xf8, 0x00, 
    0x00, 0x03, 0x6c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t thunderstorm_raw[(32 * 32)] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
    0x00, 0x7f, 0xf8, 0x00, 0x01, 0xf8, 0xfc, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x03, 0x80, 0x0f, 0x00, 
    0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x03, 0xf0, 0x1e, 0x00, 0x03, 0xf8, 
    0x3c, 0x00, 0x00, 0x3c, 0x70, 0x00, 0x00, 0x0e, 0x70, 0x00, 0x00, 0x06, 0xe0, 0x00, 0x00, 0x07, 
    0xe0, 0x00, 0x00, 0x07, 0xe0, 0x01, 0x00, 0x07, 0xe0, 0x01, 0x00, 0x07, 0xe0, 0x01, 0x00, 0x07, 
    0x70, 0x03, 0x00, 0x0e, 0x78, 0x03, 0x00, 0x1e, 0x3e, 0x07, 0x00, 0x7c, 0x1f, 0x87, 0xf1, 0xf8, 
    0x0f, 0x8f, 0xe1, 0xf0, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 
    0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const uint8_t image_data_Saraarray[1024] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
    0x00, 0x7f, 0xf8, 0x00, 0x01, 0xf8, 0xfc, 0x00, 0x03, 0xe0, 0x1e, 0x00, 0x03, 0x80, 0x0f, 0x00, 
    0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0xc0, 0x0e, 0x00, 0x03, 0xf0, 0x1e, 0x00, 0x03, 0xf8, 
    0x3c, 0x00, 0x00, 0x3c, 0x70, 0x10, 0x00, 0x0e, 0x70, 0x10, 0x00, 0x06, 0xe1, 0xf7, 0x00, 0x07, 
    0xe0, 0xfc, 0x00, 0x07, 0xe0, 0x68, 0x00, 0x07, 0xe0, 0xfe, 0x00, 0x07, 0xe1, 0x92, 0x00, 0x07, 
    0x70, 0x10, 0x00, 0x0e, 0x78, 0x10, 0x00, 0x1e, 0x3e, 0x00, 0x60, 0x7c, 0x1f, 0x00, 0x60, 0xf8, 
    0x0f, 0x03, 0x6c, 0xe0, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x01, 0xf8, 0x00, 
    0x00, 0x03, 0x6c, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00
};

/**
 * This fuction draws the match weather state icon
 */
void drawOLED(Adafruit_SSD1306& display, const Weather& weather, const DateTime& datetime) {

    display.clearDisplay();
  
    display.cp437(true);
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    
    display.setCursor(0,0);
    
    display.drawRect(0, 0, 128, 64, WHITE);
    
    display.setCursor(4,4);
    
    display.println(datetime.time);

    if (weather.description == "bloken clouds" || weather.description == "overcast clouds"){
        display.drawBitmap(92, 28, bloken_clouds_raw, 32, 32, 1);
    }
    else if(weather.description == "clear sky") 
    {  
        if(datetime.esDia) {
            display.drawBitmap(92, 28, clear_sky_day_raw, 32, 32, 1);
        }
        else {
            display.drawBitmap(92, 28, clear_sky_nigth_raw, 32, 32, 1);
        }
    }
    else if(weather.description == "few clouds") 
    {  
        if(datetime.esDia) {
            display.drawBitmap(92, 28, few_clouds_day_raw, 32, 32, 1);
        }
        else {
            display.drawBitmap(92, 28, few_clouds_night_raw, 32, 32, 1);
        }
    }
    else if(weather.description == "mist") 
    {  
        if(datetime.esDia) {
            display.drawBitmap(92, 28, mist_day_raw, 32, 32, 1);
        }
        else {
            display.drawBitmap(92, 28, mist_night_raw, 32, 32, 1);
        }
    }
    else if(weather.description == "rain" || weather.description == "light rain")
    {
        display.drawBitmap(92, 28, rain_raw, 32, 32, 1);
    }
    else if(weather.description == "scattered clouds")
    {
        display.drawBitmap(92, 28, scattered_clouds_raw, 32, 32, 1);
    }
    else if(weather.description == "shower rain" || weather.description == "drizzle")
    {
        display.drawBitmap(92, 28, shower_rain_raw, 32, 32, 1);
    }
    else if(weather.description == "snow")
    {
        display.drawBitmap(92, 28, snow_raw, 32, 32, 1);
    }
    else if(weather.description == "thunderstorm")
    {
        display.drawBitmap(92, 28, thunderstorm_raw, 32, 32, 1);
    }
    else
    {
        Serial.println("Estado no manejado del clima: ");
        Serial.println(weather.state);
        Serial.println(weather.description);
        return;
    }

    display.setCursor(64,4);
    
    //display.print("Fecha: ");
    display.println(datetime.date);
    //display.print("Hora: ");

    display.setTextSize(2);

    display.setCursor(4,28);

    display.print(weather.conversionActual);
    
    display.write(248);
    display.println("C");

    display.setTextSize(1);

    display.setCursor(4,44);
    display.println(weather.state);
    display.setCursor(4,53);
    display.print(weather.description);

    //display.drawBitmap(96, 32, image_data_Saraarray, 32, 32, 1);

    display.display();

}

#endif